#!/usr/bin/env Rscript
# The goal of this script is to create the following plots:
# 1. A UMAP plot of the HIS mice HsCD45+ spleen cells and the reference PBMC data from Hao et al. 2021 colored by tissue (and study).
# 2. A UMAP plot of the HIS mice HsCD45+ spleen cells and the reference PBMC data from Hao et al. 2021 (subsetted to the number of HIS mice HsCD45+ spleen cells) colored by tissue (and study).
# 3. A UMAP plot of the HIS mice HsCD45+ spleen cells colored and labelled by celltype.l2.
# 4. A UMAP plot of the PBMC reference PBMC data from hao et al. 2021 colored and labelled by celltype.l2.

suppressPackageStartupMessages(library(Seurat))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))

args <- commandArgs(trailingOnly = TRUE)
if (length(args) != 2) {
  stop(paste0("Script needs 2 arguments. Current input is:", args))
}
seurat_merged_rds <- args[1]
seurat_harmonized_rds <- args[2]

#Problem with the following code is that NAs are introduced in cells that don't have a particular celltype. I recall fixing that at one point, but I cannot remember where.

cell_abundances <- hs_cd45p_spleen_pbmc@meta.data %>%
  dplyr::group_by(celltype.l1, celltype.l3, Donor, Tissue) %>% 
  dplyr::summarise(Ncells = n()) %>%
  dplyr::group_by(Donor, celltype.l1) %>%
  dplyr::mutate(Nl1sample = sum(Ncells),
                Ncellprop = Ncells/Nl1sample,
                celltype_l1 = is.na(celltype.l1),
                Tissue = ifelse(Tissue == "PBMC", "PBMC (Human)", "Spleen (HIS-mouse)"))

## Boxplot

fig_abundance_boxplot <- ggplot(cell_abundances, aes(x = celltype.l3, y = Ncellprop, col = Tissue)) +
  geom_boxplot(alpha = 0.5) +
  geom_point(alpha = 0.5) +
  facet_grid(.~celltype.l1, scales = "free", space='free') +
  labs(subtitle = "Proportion relative to lineage",
       y = "Proportion") +
  theme_bw() +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.title.x = element_blank(),
        legend.pos = "bottom",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))


## Heatmap (under construction)

cell_abundances_wide <- cell_abundances %>%
  tidyr::pivot_wider(!c(celltype.l1, Tissue, celltype_l1, Nl1sample, Ncells), names_from = Donor, values_from = Ncellprop) %>%
  data.frame(., row.names = .$Donor) %>%
  dplyr::select(-Donor)

# Number of cells

ncells_l3 <- scrnaseq_hsmm_crcn_pf_l3_abundance_long %>% 
  dplyr::ungroup() %>%
  dplyr::group_by(cellclusterID) %>% 
  dplyr::summarize(N = sum(Ncells)) %>%
  data.frame()

rowanno <- unique(scrnaseq_marker_genes[,c("celltype_l1", "celltype_l3")])
rowanno <- rowanno[match(rownames(scrnaseq_hsmm_crcn_pf_l3_abundance_wide), rowanno$celltype_l3),]

fig1f <- Heatmap(as.matrix(scrnaseq_hsmm_crcn_pf_l3_abundance_wide)*100, 
                 column_split = scrnaseq_hsmm_crcn_pf_sampledata[match(colnames(scrnaseq_hsmm_crcn_pf_l3_abundance_wide), scrnaseq_hsmm_crcn_pf_sampledata$orig.ident), "Organism_coded"], 
                 row_split = rowanno$celltype_l1,
                 name = "% lineage",
                 show_row_dend = F,
                 #col = colorRamp2(c(0, 100), c("white", "red")),
                 top_annotation = HeatmapAnnotation(Cells = anno_barplot(as.vector(table(scrnaseq_hsmm_crcn_pf@meta.data$orig.ident)), bar_width = 1),
                                                    col = list(Tissue = tissue_cols),
                                                    gp = gpar(col = "black"),
                                                    annotation_name_side = "left"),
                 right_annotation = rowAnnotation(Cells = anno_barplot(ncells_l3$N, bar_width = 1),
                                                  gp = gpar(col = "black")))

Cairo::Cairo(width = 1250, height = 1500, type = "pdf", file = file.path(figDir, "fig1f.pdf"), bg = "white", units = "px", dpi = 120)
print(fig1f)
dev.off()