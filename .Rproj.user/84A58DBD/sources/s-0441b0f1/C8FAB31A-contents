---
title: "curate Myeloid annotations"
author: "Andrew Y.F. Li Yim"
date: '2022-08-10'
output: html_document
---

The goal of this script is to curate the B annotations lifted from the human PF atlas dataset. 

```{r libraries, include=FALSE}
suppressPackageStartupMessages(library(Seurat))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(Cairo))
suppressPackageStartupMessages(library(ggplot2))
```

```{r setup}
merged_rds <- file.path("..", "..", "..", "output", "merged", "merged_SeuratObject.Rds")
seurat_Deaddebris_curated_rds <- file.path("..", "..", "..", "output", "split", "Myeloid_curated_SeuratObject.Rds")
```

## Preparation

```{r data import and preparation, fig.width = 10, fig.heigh = 10}
merged <- readRDS(merged_rds)

seurat_Deaddebris <- merged[,merged@meta.data$celltype_l1 == "Dead/debris"]
seurat_Deaddebris <- seurat_Deaddebris[Matrix::rowSums(seurat_Deaddebris) != 0, ]

seurat_Deaddebris <- SCTransform(seurat_Deaddebris, conserve.memory = T)
seurat_Deaddebris <- RunPCA(object = seurat_Deaddebris, npcs = 100, seed.use = 347653675)

ElbowPlot(object = seurat_Deaddebris, ndims = 100)
```

A dimensionality of 37 seems reasonable.

```{r dimensionality reduction, fig.width = 10, fig.height = 10}
seurat_Deaddebris <- FindNeighbors(seurat_Deaddebris, reduction = "pca", dims = 1:37)
seurat_Deaddebris <- FindClusters(seurat_Deaddebris, resolution = 0.5, verbose = FALSE)
seurat_Deaddebris <- RunUMAP(seurat_Deaddebris, dims = 1:37)
seurat_Deaddebris@meta.data$subcluster <- paste0("Dead/debris.", seurat_Deaddebris@meta.data$seurat_clusters)
Idents(seurat_Deaddebris) <- "subcluster"

DimPlot(seurat_Deaddebris, group.by = "subcluster", raster = T, label = T) +
  labs(title = "Dead/debris",
       subtitle = "Louvain clustering") +
  theme(legend.pos = "bottom")
```

```{r clusters}
table(seurat_Deaddebris@meta.data$subcluster)
```

In total, we find 19 clusters.

```{r celltype_l4, fig.height = 10, fig.width = 30}
DimPlot(seurat_Deaddebris, group.by = "subcluster", raster = T, label = T, split.by = "Tissue") +
  labs(title = "Dead/debris",
       subtitle = "Louvain clustering") +
  theme(legend.pos = "bottom")
```

It is indeed observable that each tissue has its own dead/debris cluster

## Donor-specific clusters

```{r donor specific umap, fig.width=10, fig.height=10}
DimPlot(seurat_Deaddebris, group.by = "SampleID", raster = T, label = T) +
  labs(title = "Dead/debris",
       subtitle = "Donor") +
  theme(legend.pos = "none")
```

```{r donor specific clusters heatmap, fig.width = 10, fig.height = 17.5}
pheatmap::pheatmap(prop.table(table(seurat_Deaddebris@meta.data$SampleID, seurat_Deaddebris@meta.data$subcluster), 
                              margin = 2), 
                   display_numbers = T)
```

From this observation, it appears that the following clusters might be sample-specific (>0.5 cells from one cluster derived from one donor):
- Dead/debris.2: pt16_PBMC
- Dead/debris.16: pt74_TX
- Dead/debris.8: pt16_PBMC
- Dead/debris.1: pt16_PBMC
- Dead/debris.14: pt16_PBMC
- Dead/debris.3: pt81_PBMC

## Dead/debris

```{r dead debris umap, fig.width=20, fig.height=10}
FeaturePlot(seurat_Deaddebris, features = c("percent_MT", "nFeature_RNA"), raster = T, label = T)
```

It does not appear to me that all clusters might be dead/debris. A gating strategy might make it clearer.

```{r dead debris featurescatter, fig.width=10, fig.height=10}
FeatureScatter(seurat_Deaddebris, feature1 = "percent_MT", feature2 = "nFeature_RNA", raster = T) +
  geom_hline(yintercept = 3000)
```

## Cycling cells

```{r cycling cells umap, fig.width=10, fig.height=10}
DimPlot(seurat_Deaddebris, group.by = "Phase", raster = T, label = T) +
  labs(title = "Dead/debris",
       subtitle = "Phase") +
  theme(legend.pos = "bottom")
```

```{r cycling cells heatmap, fig.height=8, fig.width=3}
pheatmap::pheatmap(prop.table(table(seurat_Deaddebris@meta.data$seurat_clusters, seurat_Deaddebris@meta.data$Phase), 
                              margin = 1), 
                   display_numbers = T)
```

No evident cycling cells present

```{r marker genes, fig.width = 15, fig.height=15}
marker_genes <- FindAllMarkers(seurat_Deaddebris)
marker_genes <- split(marker_genes, f = marker_genes$cluster)
saveRDS(marker_genes, "~/ltytgat/MI-group/ayliyim/projects/TIPRJ0000015_MAPS/maps_crc/config/annotations/Dead_debris_subcluster_markers.Rds")
```

```{r Deaddebris.3, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("HBB", "HBA2", "HBA1"), label = T)
```

Deaddebris.13 are erythroblasts.

```{r Deaddebris.1 marker genes}
head(marker_genes$`Dead/debris.1`, n = 10)
```

```{r Deaddebris.1 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("DPYD", "VCAN", "CD163", "CD14"), label = T)
```

Deaddebris.1, Deaddebris.5, Deaddebris.8 are Macrophages VCAN+.

```{r Deaddebris.4 markers, fig.width = 20, fig.height = 20}
head(marker_genes$`Dead/debris.4`)
```

```{r Deadebris.4 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("SKAP1", "ARHGAP15", "BCL2", "CD3D", "MS4A1"), label = T)
```

```{r Deaddebris.17 markers, fig.width = 20, fig.height = 20}
head(marker_genes$`Dead/debris.17`)
```

```{r Deaddebris.18 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("PCDH9", "KIT", "CD34"), label = F)
```

Deaddebris.18 are the hematopoeietic stem and progenitor cells (HSPCs).

```{r Deaddebris.18 markers}
head(marker_genes$`Dead/debris.18`, n = 10)
```

```{r Deaddebris.18 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("CCL21", "MMRN1", "CD34"), label = T)
```

Dead/debris.18 are the endothelial cells.

```{r Deaddebris.10 markers}
head(marker_genes$`Dead/debris.10`, n = 10)
```

```{r Deaddebris.10 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("MUC1", "MUC2", "MUC3A", "VIL1"), label = T)
```

Dead/debris.10 are epithelial cells

```{r Deaddebris.2 markers}
head(marker_genes$`Dead/debris.2`, n = 10)
```

```{r Deaddebris.2 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("AGR2", "KRT18", "REG4"), label = T)
```

```{r Deaddebris.6 markers}
head(marker_genes$`Dead/debris.6`, n = 10)
```

```{r Deaddebris.6 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("THY1", "HP", "ITLN1", "FCGR3B"), label = T)
```

```{r Deaddebris.7 markers}
head(marker_genes$`Dead/debris.7`, n = 10)
```

```{r Deaddebris.7 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("COL1A1", "COL3A1", "COL1A2", "LUM"), label = T)
```

```{r Deaddebris.12 markers}
head(marker_genes$`Dead/debris.12`, n = 10)
```

```{r Deaddebris.12 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("ACTA2", "LUM", "IGFBP7", "CD34"), label = T)
```

```{r Deaddebris.14 markers}
head(marker_genes$`Dead/debris.14`, n = 20)
```

```{r Deaddebris.12 umap, fig.width = 20, fig.height = 20}
FeaturePlot(seurat_Deaddebris, c("PTPRC", "CD1C", "SMIM25", "HLA-DPA1"), label = T)
```

## Markers



```{r XCL expression, fig.width = 10, fig.height = 10}
FeaturePlot(seurat_Deaddebris, features =  c("PTGDS"), label = T)
```

```{r nkilc0, fig.width = 15, fig.height=15}
Myeloid8 <- FindMarkers(seurat_Deaddebris, "Myeloid.8")
Myeloid9 <- FindMarkers(seurat_Deaddebris, "Myeloid.9")
```

```{r, fig.width = 20, fig.height = 30}
FeaturePlot(seurat_Deaddebris, c("CD163","C1QC", "FN1", "ACTB", "SPP1", "VCAN"), label = T)
```

```{r, fig.width = 20, fig.height = 10}
seurat_macrophages <- seurat_Deaddebris[,seurat_Deaddebris@meta.data$subcluster %in% c("Myeloid.8", "Myeloid.2", "Myeloid.3", "Myeloid.9")]

DimPlot(seurat_macrophages, group.by = "celltype_l4") + DimPlot(seurat_macrophages, group.by = "subcluster")
```

```{r, fig.width = 20, fig.height = 30}
VlnPlot(seurat_macrophages, features = c("CD163","C1QC", "FN1", "ACTB", "SPP1", "VCAN"), group.by = "celltype_l4", ncol = 2)
```


By and large, the annotations are congruent to their expression. There are some minor adjustments to be made. It appears that B.0, B.3, and B.8 are Pre-B based on their expression of CD9 and MME. I will likely need to do some gating on that.

## Annotation

```{r cycling cells annotate, fig.width=10, fig.height=10}
seurat_Deaddebris_anno <- seurat_Deaddebris

seurat_Deaddebris_anno@meta.data <- seurat_Deaddebris_anno@meta.data %>%
  dplyr::mutate(cellID = rownames(.),
                celltype_l4 = case_when(subcluster == "Dead/debris.3" ~ "Erythroblasts",
                                        subcluster %in% c("Dead/debris.1", "Dead/debris.5", "Dead/debris.8") & GetAssayData(seurat_Deaddebris_anno)[c("VCAN"),]>0 ~ "Macrophages VCAN+",
                                        subcluster %in% c("Dead/debris.2", "Dead/debris.9") ~ "Goblet MUC2+",
                                        subcluster %in% c("Dead/debris.4", "Dead/debris.15") ~ "T apoptotic",
                                        subcluster %in% c("Dead/debris.6") ~ "Non-immune HP+PRG4",
                                        
                                        subcluster %in% c("Dead/debris.7", "Dead/debris.12") ~ "Myofibroblasts",
                                        subcluster %in% c("Dead/debris.13", "Dead/debris.16") ~ "Fibroblasts",
                                        subcluster %in% c("Dead/debris.10") ~ "Goblet MUC1+",
                                        subcluster %in% c("Dead/debris.17") ~ "HSPCs",
                                        subcluster %in% c("Dead/debris.18") ~ "Endothelial",
                                        subcluster %in% c("Dead/debris.14") ~ "Immune SMIM25+",
                                        nFeature_RNA<3000 ~ "Dead/debris",
                                        TRUE ~ celltype_l4),
                celltype_l3 = celltype_l4,
                celltype_l3 = ifelse(celltype_l3 %in% c("Macrophages VCAN+"), "M1-like", celltype_l3),
                celltype_l2 = celltype_l3,
                celltype_l2 = ifelse(celltype_l2 %in% c("Goblet MUC1+", "Goblet MUC2+"), "Goblet", celltype_l2),
                celltype_l2 = ifelse(celltype_l2 %in% c("M1-like"), "Macrophages", celltype_l2),
                celltype_l1 = celltype_l2,
                celltype_l1 = ifelse(celltype_l2 %in% c("Fibroblasts", "Myofibroblasts"), "Fibroblasts", celltype_l1),
                celltype_l1 = ifelse(celltype_l1 %in% c("Fibroblasts"), "Mesenchymal", celltype_l1),
                celltype_l1 = ifelse(celltype_l1 %in% c("Immune SMIM25+"), "Unknown", celltype_l1),
                celltype_l1 = ifelse(celltype_l1 %in% c("Non-immune HP+PRG4"), "Unknown", celltype_l1),
                celltype_l1 = ifelse(celltype_l1 %in% c("T apoptotic"), "Dead/debris", celltype_l1),
                )

DimPlot(seurat_Deaddebris_anno, group.by = "celltype_l2", raster = T, label = T) +
  labs(title = "Myeloid",
       subtitle = "Celltype l4") +
  theme(legend.pos = "bottom")
```

The aforementioned chunks (hopefully) provide context as to how we annotated the supposed dead/debris. The being said, some steps rely on unsupervised clustering algorithms whose annotation is likely based on a random seed. I cannot ascertain that under different versions of R the clustering annotations remain the same. Accordingly, I have stored the annotations we made in a separate file (config/annotations).

```{r sessionInfo}
sessionInfo()
```